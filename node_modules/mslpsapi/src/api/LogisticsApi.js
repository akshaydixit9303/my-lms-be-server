/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseResponseResult', 'model/ConfigInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BaseResponseResult'), require('../model/ConfigInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.LogisticsApi = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.BaseResponseResult, root.Mslpsapi.ConfigInfo);
  }
}(this, function(ApiClient, BaseResponseResult, ConfigInfo) {
  'use strict';

  /**
   * Logistics service.
   * @module api/LogisticsApi
   * @version v1
   */

  /**
   * Constructs a new LogisticsApi. 
   * @alias module:api/LogisticsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the logisticsDeleteChannelInfo operation.
     * @callback module:api/LogisticsApi~logisticsDeleteChannelInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据标识和渠道编码删除渠道信息
     * @param {String} identity 物流标识
     * @param {String} channelCode 渠道编码
     * @param {module:api/LogisticsApi~logisticsDeleteChannelInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsDeleteChannelInfo = function(identity, channelCode, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsDeleteChannelInfo";
      }

      // verify the required parameter 'channelCode' is set
      if (channelCode == undefined || channelCode == null) {
        throw "Missing the required parameter 'channelCode' when calling logisticsDeleteChannelInfo";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'channelCode': channelCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/DeleteChannelInfo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsDeleteCofigs operation.
     * @callback module:api/LogisticsApi~logisticsDeleteCofigsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据物流标识删除配置信息
     * @param {String} identity 
     * @param {module:api/LogisticsApi~logisticsDeleteCofigsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsDeleteCofigs = function(identity, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsDeleteCofigs";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/DeleteCofigs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsGetChannelInfo operation.
     * @callback module:api/LogisticsApi~logisticsGetChannelInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据物流标识及渠道编码获取渠道信息
     * @param {String} identity 物流标识
     * @param {String} channelCode 渠道编码
     * @param {module:api/LogisticsApi~logisticsGetChannelInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsGetChannelInfo = function(identity, channelCode, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsGetChannelInfo";
      }

      // verify the required parameter 'channelCode' is set
      if (channelCode == undefined || channelCode == null) {
        throw "Missing the required parameter 'channelCode' when calling logisticsGetChannelInfo";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'channelCode': channelCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/GetChannelInfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsGetConfig operation.
     * @callback module:api/LogisticsApi~logisticsGetConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据物流标识获取配置信息
     * @param {String} identity 物流标识
     * @param {module:api/LogisticsApi~logisticsGetConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsGetConfig = function(identity, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsGetConfig";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/GetConfig', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsRefreshLogisticsNo operation.
     * @callback module:api/LogisticsApi~logisticsRefreshLogisticsNoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 根据提交单号更新物流单号并记录物流信息
     * @param {String} identity 物流标识
     * @param {Array.<module:model/ConfigInfo>} configs 配置信息
     * @param {String} _number 提交单号
     * @param {module:api/LogisticsApi~logisticsRefreshLogisticsNoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsRefreshLogisticsNo = function(identity, configs, _number, callback) {
      var postBody = configs;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsRefreshLogisticsNo";
      }

      // verify the required parameter 'configs' is set
      if (configs == undefined || configs == null) {
        throw "Missing the required parameter 'configs' when calling logisticsRefreshLogisticsNo";
      }

      // verify the required parameter '_number' is set
      if (_number == undefined || _number == null) {
        throw "Missing the required parameter '_number' when calling logisticsRefreshLogisticsNo";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'number': _number
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'text/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/RefreshLogisticsNo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsSaveChannelInfo operation.
     * @callback module:api/LogisticsApi~logisticsSaveChannelInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 保存渠道信息
     * @param {String} identity 物流标识
     * @param {String} channelCode 渠道编码
     * @param {String} configJson 配置信息（json格式）
     * @param {String} declareJson 报关信息（json格式）
     * @param {module:api/LogisticsApi~logisticsSaveChannelInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsSaveChannelInfo = function(identity, channelCode, configJson, declareJson, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsSaveChannelInfo";
      }

      // verify the required parameter 'channelCode' is set
      if (channelCode == undefined || channelCode == null) {
        throw "Missing the required parameter 'channelCode' when calling logisticsSaveChannelInfo";
      }

      // verify the required parameter 'configJson' is set
      if (configJson == undefined || configJson == null) {
        throw "Missing the required parameter 'configJson' when calling logisticsSaveChannelInfo";
      }

      // verify the required parameter 'declareJson' is set
      if (declareJson == undefined || declareJson == null) {
        throw "Missing the required parameter 'declareJson' when calling logisticsSaveChannelInfo";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'channelCode': channelCode,
        'configJson': configJson,
        'declareJson': declareJson
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/SaveChannelInfo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsSaveConfig operation.
     * @callback module:api/LogisticsApi~logisticsSaveConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 保存配置信息
     * @param {String} identity 物流标识
     * @param {String} configJson 配置信息（json格式）
     * @param {module:api/LogisticsApi~logisticsSaveConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsSaveConfig = function(identity, configJson, callback) {
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsSaveConfig";
      }

      // verify the required parameter 'configJson' is set
      if (configJson == undefined || configJson == null) {
        throw "Missing the required parameter 'configJson' when calling logisticsSaveConfig";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'configJson': configJson
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/SaveConfig', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the logisticsSubMit operation.
     * @callback module:api/LogisticsApi~logisticsSubMitCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 提交物流并记录提交结果
     * @param {String} identity 物流标识
     * @param {Array.<String>} configs 配置信息
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.orderInfoProductInfos 
     * @param {String} opts.orderInfoOrderNumber 
     * @param {String} opts.orderInfoLogisticsNo 
     * @param {String} opts.orderInfoComment 
     * @param {Number} opts.orderInfoWeight 
     * @param {Number} opts.orderInfoPrice 
     * @param {String} opts.orderInfoContact 
     * @param {String} opts.orderInfoCompany 
     * @param {String} opts.orderInfoTel 
     * @param {String} opts.orderInfoMobilePhone 
     * @param {String} opts.orderInfoCountryCode 
     * @param {String} opts.orderInfoCountryCn 
     * @param {String} opts.orderInfoCountryEn 
     * @param {String} opts.orderInfoProvince 
     * @param {String} opts.orderInfoCity 
     * @param {String} opts.orderInfoCountry 
     * @param {String} opts.orderInfoAddress1 
     * @param {String} opts.orderInfoAddress2 
     * @param {String} opts.orderInfoZipCode 
     * @param {String} opts.orderInfoEmail 
     * @param {String} opts.orderInfoFax 
     * @param {Integer} opts.orderInfoQuantity 
     * @param {String} opts.orderInfoEShopIdentity 
     * @param {String} opts.orderInfoOriginalNo 
     * @param {String} opts.orderInfoSendAddressCountry 
     * @param {String} opts.orderInfoSendAddressCountryName 
     * @param {String} opts.orderInfoSendAddressProvince 
     * @param {String} opts.orderInfoSendAddressCity 
     * @param {String} opts.orderInfoSendAddressPostcode 
     * @param {String} opts.orderInfoSendAddressStreetAddress 
     * @param {String} opts.orderInfoSendAddressName 
     * @param {String} opts.orderInfoSendAddressPhone 
     * @param {String} opts.orderInfoSendAddressMobile 
     * @param {String} opts.orderInfoSendAddressEmail 
     * @param {String} opts.orderInfoSendAddressTrademanageId 
     * @param {String} opts.orderInfoSendAddressAddressId 
     * @param {String} opts.orderInfoSendAddressFax 
     * @param {String} opts.orderInfoSendAddressCounty 
     * @param {String} opts.orderInfoSendAddressCompany 
     * @param {String} opts.orderInfoReturnAddressCountry 
     * @param {String} opts.orderInfoReturnAddressCountryName 
     * @param {String} opts.orderInfoReturnAddressProvince 
     * @param {String} opts.orderInfoReturnAddressCity 
     * @param {String} opts.orderInfoReturnAddressPostcode 
     * @param {String} opts.orderInfoReturnAddressStreetAddress 
     * @param {String} opts.orderInfoReturnAddressName 
     * @param {String} opts.orderInfoReturnAddressPhone 
     * @param {String} opts.orderInfoReturnAddressMobile 
     * @param {String} opts.orderInfoReturnAddressEmail 
     * @param {String} opts.orderInfoReturnAddressTrademanageId 
     * @param {String} opts.orderInfoReturnAddressAddressId 
     * @param {String} opts.orderInfoReturnAddressFax 
     * @param {String} opts.orderInfoReturnAddressCounty 
     * @param {String} opts.orderInfoReturnAddressCompany 
     * @param {String} opts.orderInfoPickupAddressCountry 
     * @param {String} opts.orderInfoPickupAddressCountryName 
     * @param {String} opts.orderInfoPickupAddressProvince 
     * @param {String} opts.orderInfoPickupAddressCity 
     * @param {String} opts.orderInfoPickupAddressPostcode 
     * @param {String} opts.orderInfoPickupAddressStreetAddress 
     * @param {String} opts.orderInfoPickupAddressName 
     * @param {String} opts.orderInfoPickupAddressPhone 
     * @param {String} opts.orderInfoPickupAddressMobile 
     * @param {String} opts.orderInfoPickupAddressEmail 
     * @param {String} opts.orderInfoPickupAddressTrademanageId 
     * @param {String} opts.orderInfoPickupAddressAddressId 
     * @param {String} opts.orderInfoPickupAddressFax 
     * @param {String} opts.orderInfoPickupAddressCounty 
     * @param {String} opts.orderInfoPickupAddressCompany 
     * @param {module:api/LogisticsApi~logisticsSubMitCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.logisticsSubMit = function(identity, configs, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'identity' is set
      if (identity == undefined || identity == null) {
        throw "Missing the required parameter 'identity' when calling logisticsSubMit";
      }

      // verify the required parameter 'configs' is set
      if (configs == undefined || configs == null) {
        throw "Missing the required parameter 'configs' when calling logisticsSubMit";
      }


      var pathParams = {
      };
      var queryParams = {
        'identity': identity,
        'configs': this.apiClient.buildCollectionParam(configs, 'multi'),
        'orderInfo.productInfos': this.apiClient.buildCollectionParam(opts['orderInfoProductInfos'], 'multi'),
        'orderInfo.orderNumber': opts['orderInfoOrderNumber'],
        'orderInfo.logisticsNo': opts['orderInfoLogisticsNo'],
        'orderInfo.comment': opts['orderInfoComment'],
        'orderInfo.weight': opts['orderInfoWeight'],
        'orderInfo.price': opts['orderInfoPrice'],
        'orderInfo.contact': opts['orderInfoContact'],
        'orderInfo.company': opts['orderInfoCompany'],
        'orderInfo.tel': opts['orderInfoTel'],
        'orderInfo.mobilePhone': opts['orderInfoMobilePhone'],
        'orderInfo.countryCode': opts['orderInfoCountryCode'],
        'orderInfo.countryCn': opts['orderInfoCountryCn'],
        'orderInfo.countryEn': opts['orderInfoCountryEn'],
        'orderInfo.province': opts['orderInfoProvince'],
        'orderInfo.city': opts['orderInfoCity'],
        'orderInfo.country': opts['orderInfoCountry'],
        'orderInfo.address1': opts['orderInfoAddress1'],
        'orderInfo.address2': opts['orderInfoAddress2'],
        'orderInfo.zipCode': opts['orderInfoZipCode'],
        'orderInfo.email': opts['orderInfoEmail'],
        'orderInfo.fax': opts['orderInfoFax'],
        'orderInfo.quantity': opts['orderInfoQuantity'],
        'orderInfo.eShopIdentity': opts['orderInfoEShopIdentity'],
        'orderInfo.originalNo': opts['orderInfoOriginalNo'],
        'orderInfo.sendAddress.country': opts['orderInfoSendAddressCountry'],
        'orderInfo.sendAddress.countryName': opts['orderInfoSendAddressCountryName'],
        'orderInfo.sendAddress.province': opts['orderInfoSendAddressProvince'],
        'orderInfo.sendAddress.city': opts['orderInfoSendAddressCity'],
        'orderInfo.sendAddress.postcode': opts['orderInfoSendAddressPostcode'],
        'orderInfo.sendAddress.streetAddress': opts['orderInfoSendAddressStreetAddress'],
        'orderInfo.sendAddress.name': opts['orderInfoSendAddressName'],
        'orderInfo.sendAddress.phone': opts['orderInfoSendAddressPhone'],
        'orderInfo.sendAddress.mobile': opts['orderInfoSendAddressMobile'],
        'orderInfo.sendAddress.email': opts['orderInfoSendAddressEmail'],
        'orderInfo.sendAddress.trademanageId': opts['orderInfoSendAddressTrademanageId'],
        'orderInfo.sendAddress.addressId': opts['orderInfoSendAddressAddressId'],
        'orderInfo.sendAddress.fax': opts['orderInfoSendAddressFax'],
        'orderInfo.sendAddress.county': opts['orderInfoSendAddressCounty'],
        'orderInfo.sendAddress.company': opts['orderInfoSendAddressCompany'],
        'orderInfo.returnAddress.country': opts['orderInfoReturnAddressCountry'],
        'orderInfo.returnAddress.countryName': opts['orderInfoReturnAddressCountryName'],
        'orderInfo.returnAddress.province': opts['orderInfoReturnAddressProvince'],
        'orderInfo.returnAddress.city': opts['orderInfoReturnAddressCity'],
        'orderInfo.returnAddress.postcode': opts['orderInfoReturnAddressPostcode'],
        'orderInfo.returnAddress.streetAddress': opts['orderInfoReturnAddressStreetAddress'],
        'orderInfo.returnAddress.name': opts['orderInfoReturnAddressName'],
        'orderInfo.returnAddress.phone': opts['orderInfoReturnAddressPhone'],
        'orderInfo.returnAddress.mobile': opts['orderInfoReturnAddressMobile'],
        'orderInfo.returnAddress.email': opts['orderInfoReturnAddressEmail'],
        'orderInfo.returnAddress.trademanageId': opts['orderInfoReturnAddressTrademanageId'],
        'orderInfo.returnAddress.addressId': opts['orderInfoReturnAddressAddressId'],
        'orderInfo.returnAddress.fax': opts['orderInfoReturnAddressFax'],
        'orderInfo.returnAddress.county': opts['orderInfoReturnAddressCounty'],
        'orderInfo.returnAddress.company': opts['orderInfoReturnAddressCompany'],
        'orderInfo.pickupAddress.country': opts['orderInfoPickupAddressCountry'],
        'orderInfo.pickupAddress.countryName': opts['orderInfoPickupAddressCountryName'],
        'orderInfo.pickupAddress.province': opts['orderInfoPickupAddressProvince'],
        'orderInfo.pickupAddress.city': opts['orderInfoPickupAddressCity'],
        'orderInfo.pickupAddress.postcode': opts['orderInfoPickupAddressPostcode'],
        'orderInfo.pickupAddress.streetAddress': opts['orderInfoPickupAddressStreetAddress'],
        'orderInfo.pickupAddress.name': opts['orderInfoPickupAddressName'],
        'orderInfo.pickupAddress.phone': opts['orderInfoPickupAddressPhone'],
        'orderInfo.pickupAddress.mobile': opts['orderInfoPickupAddressMobile'],
        'orderInfo.pickupAddress.email': opts['orderInfoPickupAddressEmail'],
        'orderInfo.pickupAddress.trademanageId': opts['orderInfoPickupAddressTrademanageId'],
        'orderInfo.pickupAddress.addressId': opts['orderInfoPickupAddressAddressId'],
        'orderInfo.pickupAddress.fax': opts['orderInfoPickupAddressFax'],
        'orderInfo.pickupAddress.county': opts['orderInfoPickupAddressCounty'],
        'orderInfo.pickupAddress.company': opts['orderInfoPickupAddressCompany']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Logistics/SubMit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

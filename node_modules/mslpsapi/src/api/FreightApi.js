/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseResponseResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BaseResponseResult'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.FreightApi = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.BaseResponseResult);
  }
}(this, function(ApiClient, BaseResponseResult) {
  'use strict';

  /**
   * Freight service.
   * @module api/FreightApi
   * @version v1
   */

  /**
   * Constructs a new FreightApi. 
   * @alias module:api/FreightApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the freightCalcFreight operation.
     * @callback module:api/FreightApi~freightCalcFreightCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 计算运费
     * @param {String} channelCode 渠道编码
     * @param {Number} orderPrice 价格
     * @param {Number} weigth 重量
     * @param {String} countryCode 国家编码
     * @param {module:api/FreightApi~freightCalcFreightCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.freightCalcFreight = function(channelCode, orderPrice, weigth, countryCode, callback) {
      var postBody = null;

      // verify the required parameter 'channelCode' is set
      if (channelCode == undefined || channelCode == null) {
        throw "Missing the required parameter 'channelCode' when calling freightCalcFreight";
      }

      // verify the required parameter 'orderPrice' is set
      if (orderPrice == undefined || orderPrice == null) {
        throw "Missing the required parameter 'orderPrice' when calling freightCalcFreight";
      }

      // verify the required parameter 'weigth' is set
      if (weigth == undefined || weigth == null) {
        throw "Missing the required parameter 'weigth' when calling freightCalcFreight";
      }

      // verify the required parameter 'countryCode' is set
      if (countryCode == undefined || countryCode == null) {
        throw "Missing the required parameter 'countryCode' when calling freightCalcFreight";
      }


      var pathParams = {
      };
      var queryParams = {
        'channelCode': channelCode,
        'orderPrice': orderPrice,
        'weigth': weigth,
        'countryCode': countryCode
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Freight/CalcFreight', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the freightGetAllTemplate operation.
     * @callback module:api/FreightApi~freightGetAllTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponseResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取所有运费模版
     * @param {module:api/FreightApi~freightGetAllTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponseResult}
     */
    this.freightGetAllTemplate = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = BaseResponseResult;

      return this.apiClient.callApi(
        '/api/Freight/GetAllTemplate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

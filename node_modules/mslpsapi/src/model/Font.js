/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseColor', 'model/BaseFont'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BaseColor'), require('./BaseFont'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.Font = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.BaseColor, root.Mslpsapi.BaseFont);
  }
}(this, function(ApiClient, BaseColor, BaseFont) {
  'use strict';




  /**
   * The Font model module.
   * @module model/Font
   * @version v1
   */

  /**
   * Constructs a new <code>Font</code>.
   * @alias module:model/Font
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>Font</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Font} obj Optional instance to populate.
   * @return {module:model/Font} The populated <code>Font</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Family')) {
        obj['Family'] = ApiClient.convertToType(data['Family'], 'Integer');
      }
      if (data.hasOwnProperty('Familyname')) {
        obj['Familyname'] = ApiClient.convertToType(data['Familyname'], 'String');
      }
      if (data.hasOwnProperty('Size')) {
        obj['Size'] = ApiClient.convertToType(data['Size'], 'Number');
      }
      if (data.hasOwnProperty('CalculatedSize')) {
        obj['CalculatedSize'] = ApiClient.convertToType(data['CalculatedSize'], 'Number');
      }
      if (data.hasOwnProperty('Style')) {
        obj['Style'] = ApiClient.convertToType(data['Style'], 'Integer');
      }
      if (data.hasOwnProperty('CalculatedStyle')) {
        obj['CalculatedStyle'] = ApiClient.convertToType(data['CalculatedStyle'], 'Integer');
      }
      if (data.hasOwnProperty('Color')) {
        obj['Color'] = BaseColor.constructFromObject(data['Color']);
      }
      if (data.hasOwnProperty('BaseFont')) {
        obj['BaseFont'] = BaseFont.constructFromObject(data['BaseFont']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Font.FamilyEnum} Family
   */
  exports.prototype['Family'] = undefined;
  /**
   * @member {String} Familyname
   */
  exports.prototype['Familyname'] = undefined;
  /**
   * @member {Number} Size
   */
  exports.prototype['Size'] = undefined;
  /**
   * @member {Number} CalculatedSize
   */
  exports.prototype['CalculatedSize'] = undefined;
  /**
   * @member {Integer} Style
   */
  exports.prototype['Style'] = undefined;
  /**
   * @member {Integer} CalculatedStyle
   */
  exports.prototype['CalculatedStyle'] = undefined;
  /**
   * @member {module:model/BaseColor} Color
   */
  exports.prototype['Color'] = undefined;
  /**
   * @member {module:model/BaseFont} BaseFont
   */
  exports.prototype['BaseFont'] = undefined;


  /**
   * Allowed values for the <code>Family</code> property.
   * @enum {Integer}
   * @readonly
   */
  exports.FamilyEnum = {
    /**
     * value: 0
     * @const
     */
    "0": 0,
    /**
     * value: 1
     * @const
     */
    "1": 1,
    /**
     * value: 2
     * @const
     */
    "2": 2,
    /**
     * value: 3
     * @const
     */
    "3": 3,
    /**
     * value: 4
     * @const
     */
    "4": 4,
    /**
     * value: -1
     * @const
     */
    "-1": -1  };


  return exports;
}));



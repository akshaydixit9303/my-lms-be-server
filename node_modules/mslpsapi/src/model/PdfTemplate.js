/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessibleElementId', 'model/ByteBuffer', 'model/IPdfOCG', 'model/PdfContentByte', 'model/PdfDictionary', 'model/PdfDocument', 'model/PdfIndirectReference', 'model/PdfName', 'model/PdfOutline', 'model/PdfTransparencyGroup', 'model/PdfWriter', 'model/Rectangle'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccessibleElementId'), require('./ByteBuffer'), require('./IPdfOCG'), require('./PdfContentByte'), require('./PdfDictionary'), require('./PdfDocument'), require('./PdfIndirectReference'), require('./PdfName'), require('./PdfOutline'), require('./PdfTransparencyGroup'), require('./PdfWriter'), require('./Rectangle'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.PdfTemplate = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.AccessibleElementId, root.Mslpsapi.ByteBuffer, root.Mslpsapi.IPdfOCG, root.Mslpsapi.PdfContentByte, root.Mslpsapi.PdfDictionary, root.Mslpsapi.PdfDocument, root.Mslpsapi.PdfIndirectReference, root.Mslpsapi.PdfName, root.Mslpsapi.PdfOutline, root.Mslpsapi.PdfTransparencyGroup, root.Mslpsapi.PdfWriter, root.Mslpsapi.Rectangle);
  }
}(this, function(ApiClient, AccessibleElementId, ByteBuffer, IPdfOCG, PdfContentByte, PdfDictionary, PdfDocument, PdfIndirectReference, PdfName, PdfOutline, PdfTransparencyGroup, PdfWriter, Rectangle) {
  'use strict';




  /**
   * The PdfTemplate model module.
   * @module model/PdfTemplate
   * @version v1
   */

  /**
   * Constructs a new <code>PdfTemplate</code>.
   * @alias module:model/PdfTemplate
   * @class
   */
  var exports = function() {
    var _this = this;


























  };

  /**
   * Constructs a <code>PdfTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PdfTemplate} obj Optional instance to populate.
   * @return {module:model/PdfTemplate} The populated <code>PdfTemplate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Width')) {
        obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
      }
      if (data.hasOwnProperty('Height')) {
        obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
      }
      if (data.hasOwnProperty('BoundingBox')) {
        obj['BoundingBox'] = Rectangle.constructFromObject(data['BoundingBox']);
      }
      if (data.hasOwnProperty('Layer')) {
        obj['Layer'] = IPdfOCG.constructFromObject(data['Layer']);
      }
      if (data.hasOwnProperty('IndirectReference')) {
        obj['IndirectReference'] = PdfIndirectReference.constructFromObject(data['IndirectReference']);
      }
      if (data.hasOwnProperty('Duplicate')) {
        obj['Duplicate'] = PdfContentByte.constructFromObject(data['Duplicate']);
      }
      if (data.hasOwnProperty('Type')) {
        obj['Type'] = ApiClient.convertToType(data['Type'], 'Integer');
      }
      if (data.hasOwnProperty('Group')) {
        obj['Group'] = PdfTransparencyGroup.constructFromObject(data['Group']);
      }
      if (data.hasOwnProperty('Additional')) {
        obj['Additional'] = PdfDictionary.constructFromObject(data['Additional']);
      }
      if (data.hasOwnProperty('PageReference')) {
        obj['PageReference'] = PdfIndirectReference.constructFromObject(data['PageReference']);
      }
      if (data.hasOwnProperty('ContentTagged')) {
        obj['ContentTagged'] = ApiClient.convertToType(data['ContentTagged'], 'Boolean');
      }
      if (data.hasOwnProperty('Role')) {
        obj['Role'] = PdfName.constructFromObject(data['Role']);
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = AccessibleElementId.constructFromObject(data['ID']);
      }
      if (data.hasOwnProperty('IsInline')) {
        obj['IsInline'] = ApiClient.convertToType(data['IsInline'], 'Boolean');
      }
      if (data.hasOwnProperty('SuppressTagging')) {
        obj['SuppressTagging'] = ApiClient.convertToType(data['SuppressTagging'], 'Boolean');
      }
      if (data.hasOwnProperty('InternalBuffer')) {
        obj['InternalBuffer'] = ByteBuffer.constructFromObject(data['InternalBuffer']);
      }
      if (data.hasOwnProperty('XTLM')) {
        obj['XTLM'] = ApiClient.convertToType(data['XTLM'], 'Number');
      }
      if (data.hasOwnProperty('YTLM')) {
        obj['YTLM'] = ApiClient.convertToType(data['YTLM'], 'Number');
      }
      if (data.hasOwnProperty('CharacterSpacing')) {
        obj['CharacterSpacing'] = ApiClient.convertToType(data['CharacterSpacing'], 'Number');
      }
      if (data.hasOwnProperty('WordSpacing')) {
        obj['WordSpacing'] = ApiClient.convertToType(data['WordSpacing'], 'Number');
      }
      if (data.hasOwnProperty('HorizontalScaling')) {
        obj['HorizontalScaling'] = ApiClient.convertToType(data['HorizontalScaling'], 'Number');
      }
      if (data.hasOwnProperty('Leading')) {
        obj['Leading'] = ApiClient.convertToType(data['Leading'], 'Number');
      }
      if (data.hasOwnProperty('RootOutline')) {
        obj['RootOutline'] = PdfOutline.constructFromObject(data['RootOutline']);
      }
      if (data.hasOwnProperty('PdfWriter')) {
        obj['PdfWriter'] = PdfWriter.constructFromObject(data['PdfWriter']);
      }
      if (data.hasOwnProperty('PdfDocument')) {
        obj['PdfDocument'] = PdfDocument.constructFromObject(data['PdfDocument']);
      }
    }
    return obj;
  }

  /**
   * @member {Number} Width
   */
  exports.prototype['Width'] = undefined;
  /**
   * @member {Number} Height
   */
  exports.prototype['Height'] = undefined;
  /**
   * @member {module:model/Rectangle} BoundingBox
   */
  exports.prototype['BoundingBox'] = undefined;
  /**
   * @member {module:model/IPdfOCG} Layer
   */
  exports.prototype['Layer'] = undefined;
  /**
   * @member {module:model/PdfIndirectReference} IndirectReference
   */
  exports.prototype['IndirectReference'] = undefined;
  /**
   * @member {module:model/PdfContentByte} Duplicate
   */
  exports.prototype['Duplicate'] = undefined;
  /**
   * @member {Integer} Type
   */
  exports.prototype['Type'] = undefined;
  /**
   * @member {module:model/PdfTransparencyGroup} Group
   */
  exports.prototype['Group'] = undefined;
  /**
   * @member {module:model/PdfDictionary} Additional
   */
  exports.prototype['Additional'] = undefined;
  /**
   * @member {module:model/PdfIndirectReference} PageReference
   */
  exports.prototype['PageReference'] = undefined;
  /**
   * @member {Boolean} ContentTagged
   */
  exports.prototype['ContentTagged'] = undefined;
  /**
   * @member {module:model/PdfName} Role
   */
  exports.prototype['Role'] = undefined;
  /**
   * @member {module:model/AccessibleElementId} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * @member {Boolean} IsInline
   */
  exports.prototype['IsInline'] = undefined;
  /**
   * @member {Boolean} SuppressTagging
   */
  exports.prototype['SuppressTagging'] = undefined;
  /**
   * @member {module:model/ByteBuffer} InternalBuffer
   */
  exports.prototype['InternalBuffer'] = undefined;
  /**
   * @member {Number} XTLM
   */
  exports.prototype['XTLM'] = undefined;
  /**
   * @member {Number} YTLM
   */
  exports.prototype['YTLM'] = undefined;
  /**
   * @member {Number} CharacterSpacing
   */
  exports.prototype['CharacterSpacing'] = undefined;
  /**
   * @member {Number} WordSpacing
   */
  exports.prototype['WordSpacing'] = undefined;
  /**
   * @member {Number} HorizontalScaling
   */
  exports.prototype['HorizontalScaling'] = undefined;
  /**
   * @member {Number} Leading
   */
  exports.prototype['Leading'] = undefined;
  /**
   * @member {module:model/PdfOutline} RootOutline
   */
  exports.prototype['RootOutline'] = undefined;
  /**
   * @member {module:model/PdfWriter} PdfWriter
   */
  exports.prototype['PdfWriter'] = undefined;
  /**
   * @member {module:model/PdfDocument} PdfDocument
   */
  exports.prototype['PdfDocument'] = undefined;



  return exports;
}));



/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/IElement', 'model/PdfContentByte'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./IElement'), require('./PdfContentByte'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.ColumnText = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.IElement, root.Mslpsapi.PdfContentByte);
  }
}(this, function(ApiClient, IElement, PdfContentByte) {
  'use strict';




  /**
   * The ColumnText model module.
   * @module model/ColumnText
   * @version v1
   */

  /**
   * Constructs a new <code>ColumnText</code>.
   * @alias module:model/ColumnText
   * @class
   */
  var exports = function() {
    var _this = this;

























  };

  /**
   * Constructs a <code>ColumnText</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ColumnText} obj Optional instance to populate.
   * @return {module:model/ColumnText} The populated <code>ColumnText</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Leading')) {
        obj['Leading'] = ApiClient.convertToType(data['Leading'], 'Number');
      }
      if (data.hasOwnProperty('MultipliedLeading')) {
        obj['MultipliedLeading'] = ApiClient.convertToType(data['MultipliedLeading'], 'Number');
      }
      if (data.hasOwnProperty('YLine')) {
        obj['YLine'] = ApiClient.convertToType(data['YLine'], 'Number');
      }
      if (data.hasOwnProperty('RowsDrawn')) {
        obj['RowsDrawn'] = ApiClient.convertToType(data['RowsDrawn'], 'Integer');
      }
      if (data.hasOwnProperty('Alignment')) {
        obj['Alignment'] = ApiClient.convertToType(data['Alignment'], 'Integer');
      }
      if (data.hasOwnProperty('Indent')) {
        obj['Indent'] = ApiClient.convertToType(data['Indent'], 'Number');
      }
      if (data.hasOwnProperty('FollowingIndent')) {
        obj['FollowingIndent'] = ApiClient.convertToType(data['FollowingIndent'], 'Number');
      }
      if (data.hasOwnProperty('RightIndent')) {
        obj['RightIndent'] = ApiClient.convertToType(data['RightIndent'], 'Number');
      }
      if (data.hasOwnProperty('CurrentLeading')) {
        obj['CurrentLeading'] = ApiClient.convertToType(data['CurrentLeading'], 'Number');
      }
      if (data.hasOwnProperty('InheritGraphicState')) {
        obj['InheritGraphicState'] = ApiClient.convertToType(data['InheritGraphicState'], 'Boolean');
      }
      if (data.hasOwnProperty('IgnoreSpacingBefore')) {
        obj['IgnoreSpacingBefore'] = ApiClient.convertToType(data['IgnoreSpacingBefore'], 'Boolean');
      }
      if (data.hasOwnProperty('ExtraParagraphSpace')) {
        obj['ExtraParagraphSpace'] = ApiClient.convertToType(data['ExtraParagraphSpace'], 'Number');
      }
      if (data.hasOwnProperty('SpaceCharRatio')) {
        obj['SpaceCharRatio'] = ApiClient.convertToType(data['SpaceCharRatio'], 'Number');
      }
      if (data.hasOwnProperty('RunDirection')) {
        obj['RunDirection'] = ApiClient.convertToType(data['RunDirection'], 'Integer');
      }
      if (data.hasOwnProperty('LinesWritten')) {
        obj['LinesWritten'] = ApiClient.convertToType(data['LinesWritten'], 'Integer');
      }
      if (data.hasOwnProperty('LastX')) {
        obj['LastX'] = ApiClient.convertToType(data['LastX'], 'Number');
      }
      if (data.hasOwnProperty('ArabicOptions')) {
        obj['ArabicOptions'] = ApiClient.convertToType(data['ArabicOptions'], 'Integer');
      }
      if (data.hasOwnProperty('Descender')) {
        obj['Descender'] = ApiClient.convertToType(data['Descender'], 'Number');
      }
      if (data.hasOwnProperty('Canvas')) {
        obj['Canvas'] = PdfContentByte.constructFromObject(data['Canvas']);
      }
      if (data.hasOwnProperty('Canvases')) {
        obj['Canvases'] = ApiClient.convertToType(data['Canvases'], [PdfContentByte]);
      }
      if (data.hasOwnProperty('CompositeElements')) {
        obj['CompositeElements'] = ApiClient.convertToType(data['CompositeElements'], [IElement]);
      }
      if (data.hasOwnProperty('UseAscender')) {
        obj['UseAscender'] = ApiClient.convertToType(data['UseAscender'], 'Boolean');
      }
      if (data.hasOwnProperty('FilledWidth')) {
        obj['FilledWidth'] = ApiClient.convertToType(data['FilledWidth'], 'Number');
      }
      if (data.hasOwnProperty('AdjustFirstLine')) {
        obj['AdjustFirstLine'] = ApiClient.convertToType(data['AdjustFirstLine'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {Number} Leading
   */
  exports.prototype['Leading'] = undefined;
  /**
   * @member {Number} MultipliedLeading
   */
  exports.prototype['MultipliedLeading'] = undefined;
  /**
   * @member {Number} YLine
   */
  exports.prototype['YLine'] = undefined;
  /**
   * @member {Integer} RowsDrawn
   */
  exports.prototype['RowsDrawn'] = undefined;
  /**
   * @member {Integer} Alignment
   */
  exports.prototype['Alignment'] = undefined;
  /**
   * @member {Number} Indent
   */
  exports.prototype['Indent'] = undefined;
  /**
   * @member {Number} FollowingIndent
   */
  exports.prototype['FollowingIndent'] = undefined;
  /**
   * @member {Number} RightIndent
   */
  exports.prototype['RightIndent'] = undefined;
  /**
   * @member {Number} CurrentLeading
   */
  exports.prototype['CurrentLeading'] = undefined;
  /**
   * @member {Boolean} InheritGraphicState
   */
  exports.prototype['InheritGraphicState'] = undefined;
  /**
   * @member {Boolean} IgnoreSpacingBefore
   */
  exports.prototype['IgnoreSpacingBefore'] = undefined;
  /**
   * @member {Number} ExtraParagraphSpace
   */
  exports.prototype['ExtraParagraphSpace'] = undefined;
  /**
   * @member {Number} SpaceCharRatio
   */
  exports.prototype['SpaceCharRatio'] = undefined;
  /**
   * @member {Integer} RunDirection
   */
  exports.prototype['RunDirection'] = undefined;
  /**
   * @member {Integer} LinesWritten
   */
  exports.prototype['LinesWritten'] = undefined;
  /**
   * @member {Number} LastX
   */
  exports.prototype['LastX'] = undefined;
  /**
   * @member {Integer} ArabicOptions
   */
  exports.prototype['ArabicOptions'] = undefined;
  /**
   * @member {Number} Descender
   */
  exports.prototype['Descender'] = undefined;
  /**
   * @member {module:model/PdfContentByte} Canvas
   */
  exports.prototype['Canvas'] = undefined;
  /**
   * @member {Array.<module:model/PdfContentByte>} Canvases
   */
  exports.prototype['Canvases'] = undefined;
  /**
   * @member {Array.<module:model/IElement>} CompositeElements
   */
  exports.prototype['CompositeElements'] = undefined;
  /**
   * @member {Boolean} UseAscender
   */
  exports.prototype['UseAscender'] = undefined;
  /**
   * @member {Number} FilledWidth
   */
  exports.prototype['FilledWidth'] = undefined;
  /**
   * @member {Boolean} AdjustFirstLine
   */
  exports.prototype['AdjustFirstLine'] = undefined;



  return exports;
}));



/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.BaseResponseResult = factory(root.Mslpsapi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BaseResponseResult model module.
   * @module model/BaseResponseResult
   * @version v1
   */

  /**
   * Constructs a new <code>BaseResponseResult</code>.
   * @alias module:model/BaseResponseResult
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>BaseResponseResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BaseResponseResult} obj Optional instance to populate.
   * @return {module:model/BaseResponseResult} The populated <code>BaseResponseResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Status')) {
        obj['Status'] = ApiClient.convertToType(data['Status'], 'Integer');
      }
      if (data.hasOwnProperty('Message')) {
        obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
      }
      if (data.hasOwnProperty('Data')) {
        obj['Data'] = ApiClient.convertToType(data['Data'], Object);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BaseResponseResult.StatusEnum} Status
   */
  exports.prototype['Status'] = undefined;
  /**
   * @member {String} Message
   */
  exports.prototype['Message'] = undefined;
  /**
   * @member {Object} Data
   */
  exports.prototype['Data'] = undefined;


  /**
   * Allowed values for the <code>Status</code> property.
   * @enum {Integer}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: 100
     * @const
     */
    "100": 100,
    /**
     * value: 101
     * @const
     */
    "101": 101,
    /**
     * value: 200
     * @const
     */
    "200": 200,
    /**
     * value: 201
     * @const
     */
    "201": 201,
    /**
     * value: 202
     * @const
     */
    "202": 202,
    /**
     * value: 203
     * @const
     */
    "203": 203,
    /**
     * value: 204
     * @const
     */
    "204": 204,
    /**
     * value: 205
     * @const
     */
    "205": 205,
    /**
     * value: 206
     * @const
     */
    "206": 206,
    /**
     * value: 300
     * @const
     */
    "300": 300,
    /**
     * value: 301
     * @const
     */
    "301": 301,
    /**
     * value: 302
     * @const
     */
    "302": 302,
    /**
     * value: 303
     * @const
     */
    "303": 303,
    /**
     * value: 304
     * @const
     */
    "304": 304,
    /**
     * value: 305
     * @const
     */
    "305": 305,
    /**
     * value: 306
     * @const
     */
    "306": 306,
    /**
     * value: 307
     * @const
     */
    "307": 307,
    /**
     * value: 400
     * @const
     */
    "400": 400,
    /**
     * value: 401
     * @const
     */
    "401": 401,
    /**
     * value: 402
     * @const
     */
    "402": 402,
    /**
     * value: 403
     * @const
     */
    "403": 403,
    /**
     * value: 404
     * @const
     */
    "404": 404,
    /**
     * value: 405
     * @const
     */
    "405": 405,
    /**
     * value: 406
     * @const
     */
    "406": 406,
    /**
     * value: 407
     * @const
     */
    "407": 407,
    /**
     * value: 408
     * @const
     */
    "408": 408,
    /**
     * value: 409
     * @const
     */
    "409": 409,
    /**
     * value: 410
     * @const
     */
    "410": 410,
    /**
     * value: 411
     * @const
     */
    "411": 411,
    /**
     * value: 412
     * @const
     */
    "412": 412,
    /**
     * value: 413
     * @const
     */
    "413": 413,
    /**
     * value: 414
     * @const
     */
    "414": 414,
    /**
     * value: 415
     * @const
     */
    "415": 415,
    /**
     * value: 416
     * @const
     */
    "416": 416,
    /**
     * value: 417
     * @const
     */
    "417": 417,
    /**
     * value: 426
     * @const
     */
    "426": 426,
    /**
     * value: 500
     * @const
     */
    "500": 500,
    /**
     * value: 501
     * @const
     */
    "501": 501,
    /**
     * value: 502
     * @const
     */
    "502": 502,
    /**
     * value: 503
     * @const
     */
    "503": 503,
    /**
     * value: 504
     * @const
     */
    "504": 504,
    /**
     * value: 505
     * @const
     */
    "505": 505  };


  return exports;
}));



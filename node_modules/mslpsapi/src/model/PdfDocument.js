/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessibleElementId', 'model/PdfAcroForm', 'model/PdfCollection', 'model/PdfName', 'model/PdfOutline', 'model/PdfPageLabels', 'model/Rectangle', 'model/TabSettings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccessibleElementId'), require('./PdfAcroForm'), require('./PdfCollection'), require('./PdfName'), require('./PdfOutline'), require('./PdfPageLabels'), require('./Rectangle'), require('./TabSettings'));
  } else {
    // Browser globals (root is window)
    if (!root.Mslpsapi) {
      root.Mslpsapi = {};
    }
    root.Mslpsapi.PdfDocument = factory(root.Mslpsapi.ApiClient, root.Mslpsapi.AccessibleElementId, root.Mslpsapi.PdfAcroForm, root.Mslpsapi.PdfCollection, root.Mslpsapi.PdfName, root.Mslpsapi.PdfOutline, root.Mslpsapi.PdfPageLabels, root.Mslpsapi.Rectangle, root.Mslpsapi.TabSettings);
  }
}(this, function(ApiClient, AccessibleElementId, PdfAcroForm, PdfCollection, PdfName, PdfOutline, PdfPageLabels, Rectangle, TabSettings) {
  'use strict';




  /**
   * The PdfDocument model module.
   * @module model/PdfDocument
   * @version v1
   */

  /**
   * Constructs a new <code>PdfDocument</code>.
   * @alias module:model/PdfDocument
   * @class
   */
  var exports = function() {
    var _this = this;

























  };

  /**
   * Constructs a <code>PdfDocument</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PdfDocument} obj Optional instance to populate.
   * @return {module:model/PdfDocument} The populated <code>PdfDocument</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Leading')) {
        obj['Leading'] = ApiClient.convertToType(data['Leading'], 'Number');
      }
      if (data.hasOwnProperty('TabSettings')) {
        obj['TabSettings'] = TabSettings.constructFromObject(data['TabSettings']);
      }
      if (data.hasOwnProperty('XmpMetadata')) {
        obj['XmpMetadata'] = ApiClient.convertToType(data['XmpMetadata'], 'String');
      }
      if (data.hasOwnProperty('PageCount')) {
        obj['PageCount'] = ApiClient.convertToType(data['PageCount'], 'Integer');
      }
      if (data.hasOwnProperty('RootOutline')) {
        obj['RootOutline'] = PdfOutline.constructFromObject(data['RootOutline']);
      }
      if (data.hasOwnProperty('PageLabels')) {
        obj['PageLabels'] = PdfPageLabels.constructFromObject(data['PageLabels']);
      }
      if (data.hasOwnProperty('Collection')) {
        obj['Collection'] = PdfCollection.constructFromObject(data['Collection']);
      }
      if (data.hasOwnProperty('AcroForm')) {
        obj['AcroForm'] = PdfAcroForm.constructFromObject(data['AcroForm']);
      }
      if (data.hasOwnProperty('PageNumber')) {
        obj['PageNumber'] = ApiClient.convertToType(data['PageNumber'], 'Integer');
      }
      if (data.hasOwnProperty('LeftMargin')) {
        obj['LeftMargin'] = ApiClient.convertToType(data['LeftMargin'], 'Number');
      }
      if (data.hasOwnProperty('RightMargin')) {
        obj['RightMargin'] = ApiClient.convertToType(data['RightMargin'], 'Number');
      }
      if (data.hasOwnProperty('TopMargin')) {
        obj['TopMargin'] = ApiClient.convertToType(data['TopMargin'], 'Number');
      }
      if (data.hasOwnProperty('BottomMargin')) {
        obj['BottomMargin'] = ApiClient.convertToType(data['BottomMargin'], 'Number');
      }
      if (data.hasOwnProperty('Left')) {
        obj['Left'] = ApiClient.convertToType(data['Left'], 'Number');
      }
      if (data.hasOwnProperty('Right')) {
        obj['Right'] = ApiClient.convertToType(data['Right'], 'Number');
      }
      if (data.hasOwnProperty('Top')) {
        obj['Top'] = ApiClient.convertToType(data['Top'], 'Number');
      }
      if (data.hasOwnProperty('Bottom')) {
        obj['Bottom'] = ApiClient.convertToType(data['Bottom'], 'Number');
      }
      if (data.hasOwnProperty('PageSize')) {
        obj['PageSize'] = Rectangle.constructFromObject(data['PageSize']);
      }
      if (data.hasOwnProperty('JavaScript_onLoad')) {
        obj['JavaScript_onLoad'] = ApiClient.convertToType(data['JavaScript_onLoad'], 'String');
      }
      if (data.hasOwnProperty('JavaScript_onUnLoad')) {
        obj['JavaScript_onUnLoad'] = ApiClient.convertToType(data['JavaScript_onUnLoad'], 'String');
      }
      if (data.hasOwnProperty('HtmlStyleClass')) {
        obj['HtmlStyleClass'] = ApiClient.convertToType(data['HtmlStyleClass'], 'String');
      }
      if (data.hasOwnProperty('Role')) {
        obj['Role'] = PdfName.constructFromObject(data['Role']);
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = AccessibleElementId.constructFromObject(data['ID']);
      }
      if (data.hasOwnProperty('IsInline')) {
        obj['IsInline'] = ApiClient.convertToType(data['IsInline'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {Number} Leading
   */
  exports.prototype['Leading'] = undefined;
  /**
   * @member {module:model/TabSettings} TabSettings
   */
  exports.prototype['TabSettings'] = undefined;
  /**
   * @member {String} XmpMetadata
   */
  exports.prototype['XmpMetadata'] = undefined;
  /**
   * @member {Integer} PageCount
   */
  exports.prototype['PageCount'] = undefined;
  /**
   * @member {module:model/PdfOutline} RootOutline
   */
  exports.prototype['RootOutline'] = undefined;
  /**
   * @member {module:model/PdfPageLabels} PageLabels
   */
  exports.prototype['PageLabels'] = undefined;
  /**
   * @member {module:model/PdfCollection} Collection
   */
  exports.prototype['Collection'] = undefined;
  /**
   * @member {module:model/PdfAcroForm} AcroForm
   */
  exports.prototype['AcroForm'] = undefined;
  /**
   * @member {Integer} PageNumber
   */
  exports.prototype['PageNumber'] = undefined;
  /**
   * @member {Number} LeftMargin
   */
  exports.prototype['LeftMargin'] = undefined;
  /**
   * @member {Number} RightMargin
   */
  exports.prototype['RightMargin'] = undefined;
  /**
   * @member {Number} TopMargin
   */
  exports.prototype['TopMargin'] = undefined;
  /**
   * @member {Number} BottomMargin
   */
  exports.prototype['BottomMargin'] = undefined;
  /**
   * @member {Number} Left
   */
  exports.prototype['Left'] = undefined;
  /**
   * @member {Number} Right
   */
  exports.prototype['Right'] = undefined;
  /**
   * @member {Number} Top
   */
  exports.prototype['Top'] = undefined;
  /**
   * @member {Number} Bottom
   */
  exports.prototype['Bottom'] = undefined;
  /**
   * @member {module:model/Rectangle} PageSize
   */
  exports.prototype['PageSize'] = undefined;
  /**
   * @member {String} JavaScript_onLoad
   */
  exports.prototype['JavaScript_onLoad'] = undefined;
  /**
   * @member {String} JavaScript_onUnLoad
   */
  exports.prototype['JavaScript_onUnLoad'] = undefined;
  /**
   * @member {String} HtmlStyleClass
   */
  exports.prototype['HtmlStyleClass'] = undefined;
  /**
   * @member {module:model/PdfName} Role
   */
  exports.prototype['Role'] = undefined;
  /**
   * @member {module:model/AccessibleElementId} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * @member {Boolean} IsInline
   */
  exports.prototype['IsInline'] = undefined;



  return exports;
}));



/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Mslpsapi);
  }
}(this, function(expect, Mslpsapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Mslpsapi.OrderInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderInfo', function() {
    it('should create an instance of OrderInfo', function() {
      // uncomment below and update the code to test OrderInfo
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be.a(Mslpsapi.OrderInfo);
    });

    it('should have the property productInfos (base name: "ProductInfos")', function() {
      // uncomment below and update the code to test the property productInfos
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property orderNumber (base name: "OrderNumber")', function() {
      // uncomment below and update the code to test the property orderNumber
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property logisticsNo (base name: "LogisticsNo")', function() {
      // uncomment below and update the code to test the property logisticsNo
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "Comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "Weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "Price")', function() {
      // uncomment below and update the code to test the property price
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "Contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "Company")', function() {
      // uncomment below and update the code to test the property company
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property tel (base name: "Tel")', function() {
      // uncomment below and update the code to test the property tel
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property mobilePhone (base name: "MobilePhone")', function() {
      // uncomment below and update the code to test the property mobilePhone
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "CountryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property countryCn (base name: "CountryCn")', function() {
      // uncomment below and update the code to test the property countryCn
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property countryEn (base name: "CountryEn")', function() {
      // uncomment below and update the code to test the property countryEn
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property province (base name: "Province")', function() {
      // uncomment below and update the code to test the property province
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "City")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property address1 (base name: "Address1")', function() {
      // uncomment below and update the code to test the property address1
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property address2 (base name: "Address2")', function() {
      // uncomment below and update the code to test the property address2
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "ZipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "Fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "Quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property eShopIdentity (base name: "EShopIdentity")', function() {
      // uncomment below and update the code to test the property eShopIdentity
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property originalNo (base name: "OriginalNo")', function() {
      // uncomment below and update the code to test the property originalNo
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property sendAddress (base name: "SendAddress")', function() {
      // uncomment below and update the code to test the property sendAddress
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property returnAddress (base name: "ReturnAddress")', function() {
      // uncomment below and update the code to test the property returnAddress
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

    it('should have the property pickupAddress (base name: "PickupAddress")', function() {
      // uncomment below and update the code to test the property pickupAddress
      //var instane = new Mslpsapi.OrderInfo();
      //expect(instance).to.be();
    });

  });

}));

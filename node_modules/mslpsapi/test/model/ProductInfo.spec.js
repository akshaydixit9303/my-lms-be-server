/**
 * MS.LPS.API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Mslpsapi);
  }
}(this, function(expect, Mslpsapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Mslpsapi.ProductInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductInfo', function() {
    it('should create an instance of ProductInfo', function() {
      // uncomment below and update the code to test ProductInfo
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be.a(Mslpsapi.ProductInfo);
    });

    it('should have the property productId (base name: "ProductId")', function() {
      // uncomment below and update the code to test the property productId
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property enTradeName (base name: "EnTradeName")', function() {
      // uncomment below and update the code to test the property enTradeName
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property cnTradeName (base name: "CnTradeName")', function() {
      // uncomment below and update the code to test the property cnTradeName
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "Properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property owerOrder (base name: "OwerOrder")', function() {
      // uncomment below and update the code to test the property owerOrder
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property skuCode (base name: "SkuCode")', function() {
      // uncomment below and update the code to test the property skuCode
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property hsCode (base name: "HsCode")', function() {
      // uncomment below and update the code to test the property hsCode
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "Quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "Weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property declareValue (base name: "DeclareValue")', function() {
      // uncomment below and update the code to test the property declareValue
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "Comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property isFragile (base name: "IsFragile")', function() {
      // uncomment below and update the code to test the property isFragile
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property isLiquid (base name: "IsLiquid")', function() {
      // uncomment below and update the code to test the property isLiquid
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property isPureBattery (base name: "IsPureBattery")', function() {
      // uncomment below and update the code to test the property isPureBattery
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property isLithiumBattery (base name: "IsLithiumBattery")', function() {
      // uncomment below and update the code to test the property isLithiumBattery
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property taxNumber (base name: "TaxNumber")', function() {
      // uncomment below and update the code to test the property taxNumber
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "ImageUrl")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property linkUrl (base name: "LinkUrl")', function() {
      // uncomment below and update the code to test the property linkUrl
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "Origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "Currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

    it('should have the property uint (base name: "Uint")', function() {
      // uncomment below and update the code to test the property uint
      //var instane = new Mslpsapi.ProductInfo();
      //expect(instance).to.be();
    });

  });

}));
